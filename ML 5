import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score

# Step 1: Read the Dataset
data = pd.read_csv('diabetes.csv')  # Adjust the filename to the actual dataset file

# Step 2: Preprocess the Data
X = data.drop(columns=['Outcome'])  # Features
y = data['Outcome']  # Target variable

# Split the data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 3: Implement the K-Nearest Neighbors Algorithm
knn = KNeighborsClassifier(n_neighbors=5)  # You can adjust the number of neighbors (k) here
knn.fit(X_train, y_train)

# Step 4: Make Predictions
y_pred = knn.predict(X_test)

# Step 5: Compute Metrics
confusion = confusion_matrix(y_test, y_pred)
accuracy = accuracy_score(y_test, y_pred)
error_rate = 1 - accuracy
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)

# Print the metrics
print("Confusion Matrix:")
print(confusion)
print("Accuracy:", accuracy)
print("Error Rate:", error_rate)
print("Precision:", precision)
print("Recall:", recall)
